version: "3.9"

services:
  gateway:
    build:
      context: gateway/docker
      dockerfile: development/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
      - frontend

  frontend:
    build:
      context: frontend/docker
      dockerfile: development/nginx/Dockerfile
    depends_on:
      - frontend-node
      - api

  frontend-node:
    image: node:16-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
    tty: true

  frontend-node-cli:
    image: node:16-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app

  api:
    build:
      context: api/docker
      dockerfile: development/nginx/Dockerfile
    volumes:
      - ./api:/app:ro
    depends_on:
      - api-php-fpm

  api-php-fpm:
    build:
      context: api/docker
      dockerfile: development/php-fpm/Dockerfile
    environment:
      DATABASE_URL: postgresql://app:secret@api-postgres:5432/app?serverVersion=13&charset=utf8
      PHP_IDE_CONFIG: serverName=API
    volumes:
      - ./api:/app
    depends_on:
      - api-postgres

  api-php-cli:
    build:
      context: api/docker
      dockerfile: development/php-cli/Dockerfile
    environment:
      DATABASE_URL: postgresql://app:secret@api-postgres:5432/app?serverVersion=13&charset=utf8
    volumes:
      - ./api:/app
    depends_on:
      - api-postgres

  api-postgres:
    image: postgres:13.4-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - api-postgres:/var/lib/postgresql/data
    ports:
      - "54321:5432"

volumes:
  api-postgres:
